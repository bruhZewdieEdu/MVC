-- -----------------------------------------------------------------------------
--      SUPPRESSION DES TABLES
-- -----------------------------------------------------------------------------
-- -----------------------------------------------------------------------------
--      SUPPRESSION DES TABLES
-- -----------------------------------------------------------------------------

-- Suppression des tables enfants en premier
DROP TABLE IF EXISTS SEANCE_SERVICE;

DROP TABLE IF EXISTS COMMENTAIRE;

DROP TABLE IF EXISTS SEANCE;

DROP TABLE IF EXISTS CRENEAU_HORAIRE;

DROP TABLE IF EXISTS PANIER_PRODUIT;

DROP TABLE IF EXISTS PANIER;

DROP TABLE IF EXISTS COMMANDE_PRODUIT;

DROP TABLE IF EXISTS COMMANDE;

-- Suppression des tables parentes ensuite
DROP TABLE IF EXISTS PRODUIT;

DROP TABLE IF EXISTS BARBIER;

DROP TABLE IF EXISTS CLIENT;

DROP TABLE IF EXISTS FOURNISSEUR;

DROP TABLE IF EXISTS SERVICE;

DROP TABLE IF EXISTS ADMINISTRATEUR;

DROP TABLE IF EXISTS UTILISATEUR;

DROP TABLE IF EXISTS CATEGORIE_PRODUIT;

-- -----------------------------------------------------------------------------
--      CREATION DES TABLES
-- -----------------------------------------------------------------------------

-- Table: UTILISATEUR
CREATE TABLE UTILISATEUR (
    UTILISATEURID INT AUTO_INCREMENT PRIMARY KEY,
    UTILISATEUR_NOM VARCHAR(100) NOT NULL,
    UTILISATEUR_PRENOM VARCHAR(100) NOT NULL,
    UTILISATEUR_DATE_NAISS DATE NOT NULL,
    UTILISATEUR_ADRESSE VARCHAR(255) NOT NULL,
    UTILISATEUR_MAIL VARCHAR(100) NOT NULL UNIQUE,
    UTILISATEUR_NUM_TEL VARCHAR(20) NOT NULL,
    UTILISATEUR_STATUT VARCHAR(50) NOT NULL,
    UTILISATEUR_MOT_DE_PASSE VARCHAR(255) NOT NULL,
    UTILISATEUR_TYPE VARCHAR(255) NOT NULL
);

-- Table: ADMINISTRATEUR
CREATE TABLE ADMINISTRATEUR (
    ADMINISTRATEURID INT AUTO_INCREMENT PRIMARY KEY,
    UTILISATEURID INT,
    FOREIGN KEY (UTILISATEURID) REFERENCES UTILISATEUR(UTILISATEURID)
);

-- Table: SERVICE
CREATE TABLE SERVICE (
    SERVICEID INT AUTO_INCREMENT PRIMARY KEY,
    SERVICE_NOM VARCHAR(100) NOT NULL,
    SERVICE_DESCRIPTION TEXT,
    SERVICE_PRIX DECIMAL(10, 2) NOT NULL,
    SERVICE_DUREE TIME NOT NULL,
    SERVICE_STATUT VARCHAR(50) NOT NULL
);

-- Table: CLIENT
CREATE TABLE CLIENT (
    CLIENTID INT AUTO_INCREMENT PRIMARY KEY,
    CLIENT_DATE_INSCRIPTION DATE NOT NULL,
    UTILISATEURID INT,
    FOREIGN KEY (UTILISATEURID) REFERENCES UTILISATEUR(UTILISATEURID)
);

-- Table: FOURNISSEUR
CREATE TABLE FOURNISSEUR (
    FOURNISSEURID INT AUTO_INCREMENT PRIMARY KEY,
    FOURNISSEUR_NOM VARCHAR(255) NOT NULL,
    FOURNISSEUR_ADRESSE VARCHAR(255) NOT NULL,
    FOURNISSEUR_NUM VARCHAR(20) NOT NULL,
    FOURNISSEUR_MAIL VARCHAR(100) NOT NULL UNIQUE
);

-- Table: BARBIER
CREATE TABLE BARBIER (
    BARBIERID INT AUTO_INCREMENT PRIMARY KEY,
    BARBIER_DEBUT_CONTRAT DATE NOT NULL,
    UTILISATEURID INT,
    FOREIGN KEY (UTILISATEURID) REFERENCES UTILISATEUR(UTILISATEURID)
);

-- Table: CRENEAU_HORAIRE
CREATE TABLE CRENEAU_HORAIRE (
    CRENEAU_HORAIREID INT AUTO_INCREMENT PRIMARY KEY,
    CRENEAU_HORAIRE_DATE DATE NOT NULL,
    CRENEAU_HORAIRE_HEURE_DEBUT TIME NOT NULL,
    CRENEAU_HORAIRE_HEURE_FIN TIME NOT NULL,
    CRENEAU_HORAIRE_STATUT VARCHAR(50) NOT NULL,
    BARBIERID INT,
    FOREIGN KEY (BARBIERID) REFERENCES BARBIER(BARBIERID)
);

-- Table: SEANCE
CREATE TABLE SEANCE (
    SEANCEID INT AUTO_INCREMENT PRIMARY KEY,
    SEANCE_STATUT VARCHAR(50) NOT NULL,
    CLIENTID INT,
    BARBIERID INT,
    CRENEAU_HORAIREID INT,
    FOREIGN KEY (CLIENTID) REFERENCES CLIENT(CLIENTID),
    FOREIGN KEY (BARBIERID) REFERENCES BARBIER(BARBIERID),
    FOREIGN KEY (CRENEAU_HORAIREID) REFERENCES CRENEAU_HORAIRE(CRENEAU_HORAIREID)
);

-- Table: COMMENTAIRE
CREATE TABLE COMMENTAIRE (
    COMMENTAIREID INT AUTO_INCREMENT PRIMARY KEY,
    COMMENTAIRE_TEXTE TEXT NOT NULL,
    COMMENTAIRE_DATE DATE NOT NULL,
    COMMENTAIRE_NOTE INT NOT NULL,
    COMMENTAIRE_STATUT VARCHAR(50) NOT NULL,
    CLIENTID INT,
    SEANCEID INT,
    FOREIGN KEY (CLIENTID) REFERENCES CLIENT(CLIENTID),
    FOREIGN KEY (SEANCEID) REFERENCES SEANCE(SEANCEID)
);

-- Table: SEANCE_SERVICE
CREATE TABLE SEANCE_SERVICE (
    SEANCEID INT,
    SERVICEID INT,
    PRIMARY KEY (SEANCEID, SERVICEID),
    FOREIGN KEY (SEANCEID) REFERENCES SEANCE(SEANCEID),
    FOREIGN KEY (SERVICEID) REFERENCES SERVICE(SERVICEID)
);

-- CRÉATION DE LA TABLE CATEGORIE_PRODUIT
CREATE TABLE CATEGORIE_PRODUIT (
    CATEGORIEID INT AUTO_INCREMENT PRIMARY KEY,
    CATEGORIE_NOM VARCHAR(100) NOT NULL
);

-- CRÉATION DE LA TABLE PRODUIT (Référence à CATEGORIE_PRODUIT)
CREATE TABLE PRODUIT (
    PRODUITID INT AUTO_INCREMENT PRIMARY KEY,
    PRODUIT_NOM VARCHAR(255) NOT NULL,
    PRODUIT_PRIX DECIMAL(10, 2) NOT NULL,
    PRODUIT_DESCRIPTION TEXT,
    PRODUIT_QUANTITE_STOCK INT NOT NULL,
    PRODUIT_STATUT VARCHAR(50) NOT NULL,
    PRODUIT_TYPE_DESTINATAIRE VARCHAR(50) NOT NULL, -- 'client' ou 'barbier'
    PRODUIT_IMAGE VARCHAR(255), -- Chemin de l'image du produit
    CATEGORIEID INT, -- Référence à la table CATEGORIE_PRODUIT
    FOURNISSEURID INT NOT NULL,
    FOREIGN KEY (FOURNISSEURID) REFERENCES FOURNISSEUR(FOURNISSEURID),
    FOREIGN KEY (CATEGORIEID) REFERENCES CATEGORIE_PRODUIT(CATEGORIEID)
);

-- CRÉATION DE LA TABLE PANIER
CREATE TABLE PANIER (
    PANIERID INT AUTO_INCREMENT PRIMARY KEY,
    UTILISATEURID INT, -- Référence à l'utilisateur connecté
    DATE_CREATION DATETIME DEFAULT CURRENT_TIMESTAMP, -- Date à laquelle le panier a été créé
    FOREIGN KEY (UTILISATEURID) REFERENCES UTILISATEUR(UTILISATEURID)
);

-- CRÉATION DE LA TABLE PIVOT PANIER_PRODUIT POUR LES PRODUITS DANS LE PANIER
CREATE TABLE PANIER_PRODUIT (
    PANIERID INT,
    PRODUITID INT,
    QUANTITE INT NOT NULL,
    PRIMARY KEY (PANIERID, PRODUITID),
    FOREIGN KEY (PANIERID) REFERENCES PANIER(PANIERID),
    FOREIGN KEY (PRODUITID) REFERENCES PRODUIT(PRODUITID)
);

-- CRÉATION DE LA TABLE COMMANDE
CREATE TABLE COMMANDE (
    COMMANDEID INT AUTO_INCREMENT PRIMARY KEY,
    COMMANDE_DATE DATETIME NOT NULL,
    COMMANDE_STATUT VARCHAR(50) NOT NULL,
    UTILISATEURID INT,  -- Added to link the order to the user
    FOURNISSEURID INT,
    FOREIGN KEY (UTILISATEURID) REFERENCES UTILISATEUR(UTILISATEURID),  -- Foreign key to UTILISATEUR table
    FOREIGN KEY (FOURNISSEURID) REFERENCES FOURNISSEUR(FOURNISSEURID)
);

-- CRÉATION DE LA TABLE PIVOT COMMANDE_PRODUIT
CREATE TABLE COMMANDE_PRODUIT (
    COMMANDEID INT,
    PRODUITID INT,
    QUANTITE INT NOT NULL,
    PRIMARY KEY (COMMANDEID, PRODUITID),
    FOREIGN KEY (COMMANDEID) REFERENCES COMMANDE(COMMANDEID) ON DELETE CASCADE,  -- Ensure deletion cascades
    FOREIGN KEY (PRODUITID) REFERENCES PRODUIT(PRODUITID) ON DELETE CASCADE
);
